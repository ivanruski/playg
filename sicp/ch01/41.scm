;; Exercise 1.41. Define a procedure double that takes a procedure of one
;; argument as argument and returns a procedure that applies the original
;; procedure twice. For example, if inc is a procedure that adds 1 to its
;; argument, then (double inc) should be a procedure that adds 2.
;; What value is returned by ?

(((double (double double)) inc) 5)

(define (double f)
  (lambda (x) (f (f x))))

(define (inc x) (+ x 1))

;; (double double) transforms to:
(double double)
(lambda (x)
  (double (double x)))
;; x must be a function
(lambda (fn)
  (double (lambda (y) (fn (fn y)))))

(lambda (fn)
  (lambda (z)
    ((lambda (y) (fn (fn y)))
     ((lambda (y) (fn (fn y))) z))))

;; fn will be applied 4 times

(double (double double))
(double (lambda (fn)
          (lambda (z)
            ((lambda (y) (fn (fn y)))
             ((lambda (y) (fn (fn y))) z)))))

(lambda (outerFn)
  ((lambda (fn)
     (lambda (z)
       ((lambda (y) (fn (fn y)))
        ((lambda (y) (fn (fn y))) z))))
   ((lambda (fn)
      (lambda (z)
        ((lambda (y) (fn (fn y)))
         ((lambda (y) (fn (fn y))) z)))) outerFn)))

(lambda (outerFn)
  ((lambda (fn) ;; 1
     (lambda (z)
       ((lambda (y) (fn (fn y)))
        ((lambda (y) (fn (fn y))) z))))
   (lambda (z) ;; 2
      ((lambda (y) (outerFn (outerFn y)))
       ((lambda (y) (outerFn (outerFn y))) z)))))

;; here fn (1) is equal to the lambda (2), meaning that we will apply 4 times (2)
;; which in turn applies 4 times some function, resulting in 16 total applications

(define (16xfn fn)
  ((double (double double)) fn))

(double (double (double doulbe)))
(double 16xfn)
(lambda (fn)
  (16xfn (16xfn fn)))

;; We will apply 16 times function that applies some function 16 times, resulting
;; in a total of 256

;; The processes generated by the following combinations are different.
;; ((double (double (double double))) inc) ;; 256 incs
;; (double (double (double (double inc)))) ;; 16 incs
;; In the first one each double squares the number of applications whereas
;; in the second one each double mutiplies the applications by 2
